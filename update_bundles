#!/usr/bin/env ruby
require 'fileutils'
require 'open-uri'

# http://vimcolors.com/
# bling/vim-airline
git_bundles = %w[
  airblade/vim-gitgutter
  ap/vim-css-color
  bkad/CamelCaseMotion
  briancollins/vim-jst
  cakebaker/scss-syntax.vim
  digitaltoad/vim-pug
  easymotion/vim-easymotion
  elixir-lang/vim-elixir
  elzr/vim-json
  ervandew/supertab
  yssl/QFEnter
  flazz/vim-colorschemes
  henrik/vim-indexed-search
  int3/vim-extradite
  jeetsukumaran/vim-buffergator
  kchmck/vim-coffee-script
  keithbsmiley/rspec.vim
  mhinz/vim-hugefile
  pangloss/vim-javascript
  posva/vim-vue
  rking/ag.vim
  scrooloose/nerdcommenter
  scrooloose/nerdtree
  scrooloose/syntastic
  sjbach/lusty
  slim-template/vim-slim
  sstephenson/eco
  tap349/ack.vim
  tpope/vim-endwise
  tpope/vim-fugitive
  tpope/vim-haml
  tpope/vim-rails
  tpope/vim-repeat
  tpope/vim-rhubarb
  tpope/vim-surround
  tpope/vim-unimpaired
  morr/vim-ruby
  vim-scripts/grep.vim
  wincent/Command-T
] + %w[
  aunsira/macvim-light
  davidklsn/vim-sialoquent
  dim13/smyck.vim
  hzchirs/vim-material
  hzchirs/vim-material
  lu-ren/SerialExperimentsLain
  mom0tomo/dotfiles
  nightsense/carbonized
  nightsense/seabird
  rakr/vim-one
  rhysd/vim-color-spring-night
  tomasr/molokai
  zcodes/vim-colors-basic

]

git_keep = []

bundles_dir = File.join(File.dirname(__FILE__), 'bundle')

FileUtils.mkdir bundles_dir unless File.exists?(bundles_dir)
FileUtils.cd(bundles_dir)

# puts "trashing everything..."
# Dir['*'].each {|d| FileUtils.rm_rf d unless git_keep.include?(d) }

puts "fetching plugins..."
git_bundles.each do |plugin|
  url = "git://github.com/#{plugin}"
  dir = url.split('/').last

  if File.exists? dir
    puts " Updating #{plugin}"
    %x{cd #{dir} && git pull --rebase}
  else
    puts "  Cloning #{plugin} (#{url}) into #{dir}"
    %x{git clone #{url} #{dir}}
  end
end

# puts "compiling command-t..."

# environment = 'ARCHFLAGS="-Wno-error=unused-command-line-argument-hard-error-in-future"'
# command_t_path = File.join 'Command-T/ruby/command-t/ext/command-t'
# rvm_init_script = 'source $HOME/.zshrc && rvm use ruby-2.0.0-p648'
# command_t_build_script = 'bundle && ruby extconf.rb && make'
# # command_t_build_script = 'bundle && make clean; ruby extconf.rb && make'
# puts %x{zsh -c 'cd #{command_t_path} && #{rvm_init_script} && #{environment} #{command_t_build_script}'}
